{"version":3,"sources":["webpack:///./src/components/Bio/index.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/components/PostList/index.tsx"],"names":["config","require","Bio","comment","name","company","location","email","website","linkedin","facebook","instagram","github","className","icon","faUserCircle","faAddressCard","faMapMarkerAlt","faAt","href","faLink","target","rel","siteUrl","faRss","faLinkedin","faFacebook","faInstagram","faGithub","pageQuery","IndexPage","props","posts","data","allMarkdownRemark","edges","Layout","title","PostList","length","to","faSearch","memo","mapPost","map","post","node","excerpt","fields","frontmatter","slug","date","tags","mapTag","tag","key"],"mappings":"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","file":"component---src-pages-index-tsx-7c8fa0061655f1a33b0b.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon as Fa } from '@fortawesome/react-fontawesome';\nimport { faUserCircle, faAt, faMapMarkerAlt, faLink, faAddressCard, faRss } from '@fortawesome/free-solid-svg-icons';\nimport { faFacebook, faInstagram, faLinkedin, faGithub } from '@fortawesome/free-brands-svg-icons';\n\nimport './bio.scss';\nconst config = require('../../../config');\n\nconst Bio = () => {\n  const { comment, name, company, location, email, website, linkedin, facebook, instagram, github } = config;\n\n  return (\n    <div className=\"bio\">\n      {!comment ? null : <span className=\"comment\">{comment}</span>}\n\n      {!name ? null : (\n        <div className=\"bio-item name\">\n          <div className=\"icon-wrap\">\n            <Fa icon={faUserCircle} />\n          </div>\n          <span>{name}</span>\n        </div>\n      )}\n\n      {!company ? null : (\n        <div className=\"bio-item company\">\n          <div className=\"icon-wrap\">\n            <Fa icon={faAddressCard} />\n          </div>\n          <span>{company}</span>\n        </div>\n      )}\n\n      {!location ? null : (\n        <div className=\"bio-item location\">\n          <div className=\"icon-wrap\">\n            <Fa icon={faMapMarkerAlt} />\n          </div>\n          <span>{location}</span>\n        </div>\n      )}\n\n      {!email ? null : (\n        <div className=\"bio-item email\">\n          <div className=\"icon-wrap\">\n            <Fa icon={faAt} />\n          </div>\n          <a href={`mailto:${email}`}>{email}</a>\n        </div>\n      )}\n\n      {!website ? null : (\n        <div className=\"bio-item website\">\n          <div className=\"icon-wrap\">\n            <Fa icon={faLink} />\n          </div>\n\n          <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\n            {website}\n          </a>\n        </div>\n      )}\n\n      <div className=\"social\">\n        <a href={`${config.siteUrl}/rss`} target=\"_blank\" rel=\"noopener noreferrer\">\n          <Fa icon={faRss} className=\"rss\" />\n        </a>\n\n        {!linkedin ? null : (\n          <a href={linkedin} target=\"_blank\" rel=\"noopener noreferrer\">\n            <Fa icon={faLinkedin} className=\"linkedin\" />\n          </a>\n        )}\n\n        {!facebook ? null : (\n          <a href={facebook} target=\"_blank\" rel=\"noopener noreferrer\">\n            <Fa icon={faFacebook} className=\"facebook\" />\n          </a>\n        )}\n        {!instagram ? null : (\n          <a href={instagram} target=\"_blank\" rel=\"noopener noreferrer\">\n            <Fa icon={faInstagram} className=\"instagram\" />\n          </a>\n        )}\n        {!github ? null : (\n          <a href={github} target=\"_blank\" rel=\"noopener noreferrer\">\n            <Fa icon={faGithub} className=\"github\" />\n          </a>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Bio;\n","import * as React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport { FontAwesomeIcon as Fa } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/seo';\nimport Bio from '../components/Bio';\nimport './styles/index.scss';\nimport PostList from '../components/PostList';\n\nexport interface IndexPageProps {\n  path: String;\n  location: Object;\n  data: any; //\n}\n\nconst IndexPage = (props: IndexPageProps) => {\n  const posts = props.data.allMarkdownRemark.edges;\n\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n      <div className=\"index-wrap\">\n        <Bio />\n        <div className=\"index-post-list-wrap\">\n          <PostList posts={posts} />\n          {posts.length < 100 ? null : (\n            <div className=\"show-more-posts\">\n              <div className=\"show-more-btn\">\n                <Link to=\"/search\">\n                  <Fa icon={faSearch} />\n                  <span>SHOW MORE POSTS</span>\n                </Link>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }, limit: 100) {\n      edges {\n        node {\n          excerpt(format: PLAIN)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMM DD, YYYY\")\n            title\n            tags\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexPage;\n","import React from 'react';\nimport { memo } from 'react';\nimport { Link } from 'gatsby';\n\nimport './postList.scss';\n\nexport interface PostListProps {\n  posts: any;\n}\n\nconst PostList = memo((props: PostListProps) => {\n  const { posts } = props;\n\n  const mapPost = posts.map((post: any) => {\n    const { node } = post;\n    const { excerpt, fields, frontmatter } = node;\n    const { slug } = fields;\n    const { date, title, tags } = frontmatter;\n\n    const mapTag = tags.map((tag: String) => {\n      if (tag === 'undefined') return;\n\n      return (\n        <li key={`${slug}-${tag}`} className=\"tag\">\n          <span>\n            <Link to={`/tags#${tag}`}>{`#${tag}`}</Link>\n          </span>\n        </li>\n      );\n    });\n\n    return (\n      <li key={slug} className=\"post\">\n        <article>\n          <h2 className=\"title\">\n            <Link to={slug}>{title}</Link>\n          </h2>\n          <div className=\"info\">\n            <span className=\"date\">{date}</span>\n            {tags.length && tags[0] !== 'undefined' ? <span className=\"info-dot\">Â·</span> : null}\n            <ul className=\"tag-list\">{mapTag}</ul>\n          </div>\n          <span className=\"excerpt\">\n            <Link to={slug}>{excerpt}</Link>\n          </span>\n        </article>\n      </li>\n    );\n  });\n  return (\n    <div className=\"post-list\">\n      <ul>{mapPost}</ul>\n    </div>\n  );\n});\n\nexport default PostList;\n"],"sourceRoot":""}